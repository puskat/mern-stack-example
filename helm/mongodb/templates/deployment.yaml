apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongo.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "mongo.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "mongo.name" . }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: mongodb
          image: "bitnami/mongodb"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}       
          env:
            - name: MONGODB_USERNAME
              value: "{{ .Values.mongodb.auth.username }}"
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mongo.fullname" . }}-secret
                  key: mongodb-password
            - name: MONGODB_DATABASE
              value: "{{ .Values.mongodb.auth.database }}"
            - name: ALLOW_EMPTY_PASSWORD
              value: "true"
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: {{ include "mongo.fullname" . }}-pvc
